---
apiVersion: v1
kind: Namespace
metadata:
  name: streaming
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: main-pool
  namespace: streaming
  labels:
    strimzi.io/cluster: cluster-development
spec:
#  replicas: 1
  replicas: 2
  roles:
    - broker
  storage:
    type: "ephemeral"
    sizeLimit: "10Gi"
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: cluster-development
  namespace: streaming
  annotations:
    strimzi.io/node-pools: enabled
spec:
  kafka:
    version: 3.7.0
    # restrict resource access authorization base on AclAuthorizer
    authorization:
      superUsers:
        - "admin"
      type: "simple"
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: expose
        port: 9094
        type: ingress
        tls: true
        # listener require mtls authentication
        authentication:
          type: tls
        configuration:
          bootstrap:
            host: kafka.127.0.0.1.nip.io
            alternativeNames:
              - cluster-development-kafka-expose-bootstrap.streaming.svc.cluster.local
              - cluster-development-main-pool-expose-0.streaming.svc.cluster.local
              - cluster-development-main-pool-expose-1.streaming.svc.cluster.local
          brokers:
            - broker: 0
              advertisedHost: cluster-development-main-pool-expose-0.streaming.svc.cluster.local
              advertisedPort: 9094
              host: broker.0.127.0.0.1.nip.io
            - broker: 1
              advertisedHost: cluster-development-main-pool-expose-1.streaming.svc.cluster.local
              advertisedPort: 9094
              host: broker.1.127.0.0.1.nip.io
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      default.replication.factor: 1
      min.insync.replicas: 1
      inter.broker.protocol.version: "3.4"
      auto.leader.rebalance.enable: true
      leader.imbalance.check.interval.seconds: 2
  zookeeper:
    replicas: 1
#    replicas: 2
    storage:
      type: "ephemeral"
      sizeLimit: "10Gi"
  cruiseControl: {}
  entityOperator:
    topicOperator: {}
    userOperator: {}
